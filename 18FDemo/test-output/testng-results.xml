<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="0" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="2673" started-at="2015-07-01T20:14:04Z" finished-at="2015-07-01T20:14:07Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="2673" started-at="2015-07-01T20:14:04Z" finished-at="2015-07-01T20:14:07Z">
      <class name="demo.f18.testsuite.F18EnterDrug">
        <test-method status="PASS" signature="fetchSuiteConfiguration(org.testng.ITestContext)[pri:0, instance:[F18EnterDrug passed=0 failed=0 skipped=0]]" name="fetchSuiteConfiguration" is-config="true" duration-ms="15" started-at="2015-07-01T16:14:04Z" finished-at="2015-07-01T16:14:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@2db238ce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchSuiteConfiguration -->
        <test-method status="FAIL" signature="setUp(java.lang.reflect.Method)[pri:0, instance:[F18EnterDrug passed=0 failed=0 skipped=0]]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-01T16:14:04Z" finished-at="2015-07-01T16:14:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void demo.f18.testsuite.F18EnterDrug.enterDrugDetails() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver executable does not exist: \\usr\bin\phantomjs]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver executable does not exist: \\usr\bin\phantomjs
	at com.google.common.base.Preconditions.checkState(Preconditions.java:176)
	at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:117)
	at org.openqa.selenium.phantomjs.PhantomJSDriverService.findPhantomJS(PhantomJSDriverService.java:246)
	at org.openqa.selenium.phantomjs.PhantomJSDriverService.createDefaultService(PhantomJSDriverService.java:182)
	at org.openqa.selenium.phantomjs.PhantomJSDriver.<init>(PhantomJSDriver.java:99)
	at demo.f18.testing.util.TestConfig.setUp(TestConfig.java:147)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="enterDrugDetails()[pri:0, instance:[F18EnterDrug passed=0 failed=0 skipped=0]]" name="enterDrugDetails" duration-ms="21" started-at="2015-07-01T16:14:07Z" finished-at="2015-07-01T16:14:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterDrugDetails -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:[F18EnterDrug passed=0 failed=0 skipped=0]]" name="tearDown" is-config="true" duration-ms="0" started-at="2015-07-01T16:14:07Z" finished-at="2015-07-01T16:14:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=enterDrugDetails on [F18EnterDrug passed=0 failed=0 skipped=0] status=SKIP method=F18EnterDrug.enterDrugDetails()[pri:0, instance:[F18EnterDrug passed=0 failed=0 skipped=0]] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- demo.f18.testsuite.F18EnterDrug -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
